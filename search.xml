<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue3项目搭建</title>
      <link href="/2022/03/vue3-build/"/>
      <url>/2022/03/vue3-build/</url>
      
        <content type="html"><![CDATA[<h1 id="约束代码风格"><a href="#约束代码风格" class="headerlink" title="约束代码风格"></a>约束代码风格</h1><h2 id="解决eslint和prettierc冲突"><a href="#解决eslint和prettierc冲突" class="headerlink" title="解决eslint和prettierc冲突"></a>解决eslint和prettierc冲突</h2><p>冲突原因：<br>项目使用了vscode的扩展程序eslint和prettierc，并开启了保存时自动格式化和自动修复代码的功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">// .vscode/setting.json</span><br><span class="line">&#123; </span><br><span class="line">  // 保存时 prettier 自动格式化</span><br><span class="line">  &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">  // 保存时自动启用 eslint --fix 自动修复</span><br><span class="line">  &quot;editor.codeActionsOnSave&quot;: &#123;</span><br><span class="line">    &quot;source.fixAll&quot;: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// .eslintrc</span><br><span class="line">&#123;</span><br><span class="line">  &quot;env&quot;: &#123;</span><br><span class="line">    &quot;browser&quot;: true,</span><br><span class="line">    &quot;es2021&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;extends&quot;: [&quot;plugin:vue/essential&quot;, &quot;airbnb-base&quot;],</span><br><span class="line">  &quot;parserOptions&quot;: &#123;</span><br><span class="line">    &quot;ecmaVersion&quot;: &quot;latest&quot;,</span><br><span class="line">    &quot;parser&quot;: &quot;@typescript-eslint/parser&quot;,</span><br><span class="line">    &quot;sourceType&quot;: &quot;module&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;plugins&quot;: [&quot;vue&quot;, &quot;@typescript-eslint&quot;],</span><br><span class="line">  &quot;rules&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// .prettierrc </span><br><span class="line">&#123;</span><br><span class="line">   // 使用双引号</span><br><span class="line">  &quot;singleQuote&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>eslint中推荐使用单引号，与prettier配置相互冲突。解决两者冲突问题，需要用到 <strong>eslint-plugin-prettier</strong> 和 <strong>eslint-config-prettier</strong>。让eslint只负责代码质量检测而 prettier负责美化。</p><ul><li>eslint-plugin-prettier 将 Prettier 的规则设置到 ESLint 的规则中。</li><li>eslint-config-prettier 关闭 ESLint 中与 Prettier 中会发生冲突的规则。</li></ul><p>最后形成优先级：Prettier 配置规则 &gt; ESLint 配置规则。</p><p>安装依赖并修改.eslintrc文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装依赖</span></span><br><span class="line">yarn add eslint-config-prettier eslint-plugin-prettier -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// .eslintrc</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 其余的配置</span></span><br><span class="line"> - <span class="attr">&quot;extends&quot;</span>: [<span class="string">&quot;eslint:recommended&quot;</span>, <span class="string">&quot;standard&quot;</span>]</span><br><span class="line"> + <span class="string">&quot;extends&quot;</span>: [<span class="string">&quot;eslint:recommended&quot;</span>, <span class="string">&quot;standard&quot;</span>,  <span class="string">&quot;plugin:prettier/recommended&quot;</span>]</span><br><span class="line">  <span class="comment">// 其余的配置</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://juejin.cn/post/7012160233061482532">https://juejin.cn/post/7012160233061482532</a></p><h2 id="vue3-eslint报错"><a href="#vue3-eslint报错" class="headerlink" title="vue3 eslint报错"></a>vue3 eslint报错</h2><h3 id="1-支持vue3-0中多根节点（fragements）"><a href="#1-支持vue3-0中多根节点（fragements）" class="headerlink" title="1. 支持vue3.0中多根节点（fragements）"></a>1. 支持vue3.0中多根节点（fragements）</h3><p><img src="image01.png" alt="image.png"></p><ul><li>错误原因：The template root requires exactly one element.// 模板只需要一个根元素</li><li>解决办法： 在.eslintrc.js文件中，配置rules成功解决。<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  ...,</span><br><span class="line">  rules: &#123;</span><br><span class="line">    <span class="attr">&quot;vue/no-multiple-template-root&quot;</span>: <span class="string">&quot;off&quot;</span>,<span class="comment">// 关闭多根节点的校验</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-配置了别名-，eslint报错Unable-to-resolve-path-to-module-eslint-import-no-unresolved"><a href="#2-配置了别名-，eslint报错Unable-to-resolve-path-to-module-eslint-import-no-unresolved" class="headerlink" title="2. 配置了别名@，eslint报错Unable to resolve path to module eslint(import/no-unresolved)"></a>2. 配置了别名@，eslint报错<code>Unable to resolve path to module eslint(import/no-unresolved)</code></h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  ...</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">      &#x27;@&#x27;: resolve(__dirname, &#x27;src&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Home.vue</span></span><br><span class="line"><span class="comment">// eslint校验报错：Unable to resolve path to module eslint(import/no-unresolved)</span></span><br><span class="line">import Home from &#x27;@/views/Home.vue&#x27; </span><br></pre></td></tr></table></figure><ul><li>错误原因：airbnb有一条规则: eslint(import/no-unresolved)   eslint不知道怎么解析别名路径</li><li>解决方法：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装 eslint-import-resolver-typescript</span></span><br><span class="line">yarn add eslint-import-resolver-typescript -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// .eslintrc.js.</span></span><br><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  settings: &#123;</span><br><span class="line">    <span class="attr">&quot;import/resolver&quot;</span>: &#123;</span><br><span class="line">      typescript: &#123;&#125; <span class="comment">// this loads &lt;rootdir&gt;/tsconfig.json to eslint</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// tsconfig.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;paths&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span>: [<span class="string">&quot;src/*&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-提示path模块找不到"><a href="#3-提示path模块找不到" class="headerlink" title="3. 提示path模块找不到"></a>3. 提示path模块找不到</h3><p>安装一下 @types/node</p><h3 id="4-state赋值报错：no-param-reassign"><a href="#4-state赋值报错：no-param-reassign" class="headerlink" title="4. state赋值报错：no-param-reassign"></a>4. state赋值报错：no-param-reassign</h3><p><img src="image02.png" alt="image.png"></p><ul><li>解决方法：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  ...</span><br><span class="line">  rules: &#123;</span><br><span class="line">    &#x27;no-param-reassign&#x27;: [</span><br><span class="line">      &#x27;error&#x27;,</span><br><span class="line">      &#123;</span><br><span class="line">        props: <span class="literal">true</span>,</span><br><span class="line">        ignorePropertyModificationsFor: [</span><br><span class="line">          &#x27;state&#x27; <span class="comment">// for vuex state</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从vue2升级到vue3</title>
      <link href="/2021/12/vue2-upgrade-to-vue3/"/>
      <url>/2021/12/vue2-upgrade-to-vue3/</url>
      
        <content type="html"><![CDATA[<h1 id="升级流程"><a href="#升级流程" class="headerlink" title="升级流程:"></a>升级流程:</h1><ol><li><a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E5%BA%9F%E5%BC%83%E4%BA%86%E7%9A%84%E8%AF%AD%E6%B3%95">废弃的具名/作用域插槽语法</a>，先将其更新至 (2.6 已经支持的) 最新的语法。</li><li>安装，以vue-cli为例：通过 vue upgrade 升级到最新的 @vue/cli-service</li><li>修复编译时的错误/警告 (例如对过滤器的使用)</li><li><a href="https://vant-ui.github.io/vant/#/zh-CN/migrate-from-v2">vant组件库升级</a></li><li>升级 <a href="https://v3.cn.vuejs.org/guide/migration/transition.html"><transition>类名</a>。这是唯一没有运行时警告的特性。</li></ol><p>过渡类名 v-enter 修改为 v-enter-from、过渡类名 v-leave 修改为 v-leave-from</p><ol start="6"><li>更新应用的入口以使用<a href="https://v3.cn.vuejs.org/guide/migration/global-api.html#%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E5%85%A8%E5%B1%80-api-createapp">新的全局挂载 API</a>。</li><li><a href="https://next.vuex.vuejs.org/zh/guide/migrating-to-4-0-from-3-x.html">将vuex升级至 v4</a>。</li><li><a href="https://next.router.vuejs.org/zh/guide/migration/index.html">将vue-router升级至 v4</a>。如果你还使用了 vuex-router-sync，可以同时将其替换为一个 store getter。</li></ol><p>升级过后，同 <router-view> 一起使用 <transition> 和 <keep-alive> 就要求使用新的<a href="https://next.router.vuejs.org/zh/guide/migration/index.html#router-view-%E3%80%81-keep-alive-%E5%92%8C-transition">基于作用域插槽的语法</a>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">&lt;transition name=&quot;router-fade&quot; mode=&quot;out-in&quot;&gt;</span><br><span class="line">&lt;router-view/&gt;</span><br><span class="line">&lt;/transition&gt;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;router-view v-slot=&quot;&#123; Component &#125;&quot;&gt;</span><br><span class="line">&lt;transition name=&quot;router-fade&quot; mode=&quot;out-in&quot;&gt;</span><br><span class="line">&lt;component :is=&quot;Component&quot;/&gt;</span><br><span class="line">&lt;/transition&gt;</span><br><span class="line">&lt;/router-view&gt;</span><br></pre></td></tr></table></figure><p>到这步项目基本上就能运行起来了。</p><h1 id="3-修复编译时的错误-警告"><a href="#3-修复编译时的错误-警告" class="headerlink" title="3. 修复编译时的错误/警告"></a>3. 修复编译时的错误/警告</h1><h2 id="3-1-生命周期"><a href="#3-1-生命周期" class="headerlink" title="3.1 生命周期"></a>3.1 生命周期</h2><p>生命周期钩子 <code>beforeDestroy</code> 和 <code>destroyed</code> 已经分别被重命名为 <code>beforeUnmount</code> 和 <code>unmouted</code></p><h2 id="3-2-过滤器"><a href="#3-2-过滤器" class="headerlink" title="3.2 过滤器"></a><a href="https://v3.cn.vuejs.org/guide/migration/filters.htm">3.2 过滤器</a></h2><p>全局过滤器改为注册全局方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> filters <span class="keyword">from</span> <span class="string">&#x27;@/filters&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.keys(filters).forEach(key =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   Vue.filter(key, filters[key])</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = createApp(App)</span><br><span class="line"></span><br><span class="line">app.config.globalProperties.$filters = filters</span><br></pre></td></tr></table></figure><h2 id="3-3-v-model"><a href="#3-3-v-model" class="headerlink" title="3.3 v-model"></a><a href="https://v3.cn.vuejs.org/guide/migration/v-model.html">3.3 v-model</a></h2><p><code>v-bind</code> 的 <code>.sync</code> 修饰符已移除</p><p>2.X版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;van-list :error.sync=&quot;error&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>3.X版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;van-list v-model:error=&quot;error&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>修改后 eslint校验报错 </p><blockquote><p>error  ‘v-model’ directives require no argument  vue/no-v-model-argument</p></blockquote><p>修改.eslintrc.js 配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">extends</span>: [</span><br><span class="line">-<span class="string">&#x27;plugin:vue/essential&#x27;</span>,</span><br><span class="line">+   <span class="string">&#x27;plugin:vue/vue3-essential&#x27;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-vant组件库升级"><a href="#4-vant组件库升级" class="headerlink" title="4. vant组件库升级"></a>4. vant组件库升级</h1><p>升级vant</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add vant@3</span><br></pre></td></tr></table></figure><p>全局注册</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Button &#125; from &#x27;vant&#x27;;</span><br><span class="line">import &#123; createApp &#125; from &#x27;vue&#x27;;</span><br><span class="line"></span><br><span class="line">const app = createApp();</span><br><span class="line"></span><br><span class="line">// 方式一. 通过 app.use 注册</span><br><span class="line">// 注册完成后，在模板中通过 &lt;van-button&gt; 或 &lt;VanButton&gt; 标签来使用按钮组件</span><br><span class="line">app.use(Button);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序问题记录【持续更新】</title>
      <link href="/2021/11/miniprogram-record/"/>
      <url>/2021/11/miniprogram-record/</url>
      
        <content type="html"><![CDATA[<p>● ios下textarea会有默认内边距<br><img src="textarea_props.png" alt="image.png"></p><p>● textarea maxlength属性限制文本长度，输入框显示内容和e.target.value数据不一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea v-model=&quot;value&quot; :maxlength=&quot;5&quot; /&gt;</span><br><span class="line"></span><br><span class="line">// 英文键盘输入&quot;aaaaa&quot;，继续输入&quot;bb&quot;，输入框显示&quot;aaaaa&quot;, 实际上value是&quot;aaaaabb&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css实现多行文本展开收起</title>
      <link href="/2021/06/css-mtext-expand/"/>
      <url>/2021/06/css-mtext-expand/</url>
      
        <content type="html"><![CDATA[<p>手上的项目观察到这么一个页面，可以看到教师简介溢出省略的位置是不固定的，显然展示的效果不太理想。<br><img src="image01.png" width="540px"></p><span id="more"></span><p>这块文字溢出省略支持展开的功能，不想用js选择了一个比较暴力的方式。通过判断字符串长度，小于40则截取前40个字符展示，文字末尾加<code>...</code>，支持展开。实际上中英文字符宽度是不固定的，并没有达到期望的效果。<br>CSS实现这个布局和交互感觉有难度，js有现成的组件能用，但我还是会优先考虑CSS。</p><p>实现的难点</p><ul><li>多行溢出省略，且右下角环绕显示“展开”按钮</li><li>文本不超出固定行数，不显示“展开”</li><li>展开和收起的切换</li></ul><p>布局文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;teacher-desc&quot;</span>&gt;</span>从事专业教学12年，参与编写教材《建筑工程项目管理》、《工程量清单计价》，公开发表建筑工程管理类文章多篇。授课利落严谨，理论联系实际，通俗易懂。在考前冲刺培训中，对知识点剖析精准专业，考前技巧独到。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="一：多行文字溢出省略，“展开”按钮在右下角，实现文字环绕。"><a href="#一：多行文字溢出省略，“展开”按钮在右下角，实现文字环绕。" class="headerlink" title="一：多行文字溢出省略，“展开”按钮在右下角，实现文字环绕。"></a>一：多行文字溢出省略，“展开”按钮在右下角，实现文字环绕。</h2><h3 id="1-多行文字溢出省略，用line-clamp"><a href="#1-多行文字溢出省略，用line-clamp" class="headerlink" title="1. 多行文字溢出省略，用line-clamp"></a>1. 多行文字溢出省略，用<code>line-clamp</code></h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.teacher-desc</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  -webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line">  -webkit-box-orient: vertical;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显示如下：<br><img src="image02.png" width="540px"></p><h3 id="2-“展开”按钮在右下角，实现文字环绕。"><a href="#2-“展开”按钮在右下角，实现文字环绕。" class="headerlink" title="2. “展开”按钮在右下角，实现文字环绕。"></a>2. “展开”按钮在右下角，实现文字环绕。</h3><p>第一个想法是用<code>float</code>，我们试试float的实现效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// <span class="selector-tag">html</span></span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;teacher-desc&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">button</span> class=&quot;btn&quot;&gt;展开&lt;/<span class="selector-tag">button</span>&gt;</span><br><span class="line">从事专业教学<span class="number">12</span>年，参与编写教材《建筑工程项目管理》、《工程量清单计价》，公开发表建筑工程管理类文章多篇。授课利落严谨，理论联系实际，通俗易懂。在考前冲刺培训中，对知识点剖析精准专业，考前技巧独到。</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br><span class="line">// css</span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="image03.png" width="540px">现在尝试把“展开”按钮移到右下角<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="image04.png" width="540px">用margin可以看到，上方空出了一块，没有实现环绕的效果。环绕效果可以考虑`shapes布局`。不了解的可以看这篇文章[写给自己看的CSS shapes布局教程 «  张鑫旭-鑫空间-鑫生活](https://www.zhangxinxu.com/wordpress/2019/02/css-css3-shapes/)​<p>我们完善一下样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">// ...</span><br><span class="line">  shape-outside: <span class="built_in">inset</span>(<span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">1.5em</span>) <span class="number">0</span> <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="image05.png" width="540px">## 二: 文本不超出固定行数，不显示“展开”<p>通过js来判断文本区域高度比较容易，那通过css怎么实现呢？不影响布局的前提下，用伪元素在文本后面加一个块覆盖展开按钮</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.teacher-desc</span> &#123;</span><br><span class="line">   &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给文本区域加个高度看一下效果，可以看到小方块是紧跟文本后面的<br><img src="image06.png" width="540px"><br>再改一下小方块颜色，文本字数减少看效果<br><img src="image07.png" width="540px"><br>很不错很完美，然后新的问题出现了<br><img src="image08.png" width="540px"><br>本文只有一行时，文本区域高度不对，展开按钮设置了margin-top。<br>​</p><p>一开始想用<code>calc</code>计算出离上边距的距离<code>margin-top：calc(100% - 18px)</code>，这里有个不常用容易忽略的点，margin百分比的参照物是父元素宽度， 而不是高度。用margin是解决不了这个问题了，用伪元素试试</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">// <span class="selector-tag">html</span></span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;teacher-container&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;teacher-desc&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">button</span> class=&quot;btn&quot;&gt;展开&lt;/<span class="selector-tag">button</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">span</span>&gt;从事专业教学<span class="number">12</span>年，参与编写教材《建筑工程项目管理》、《工程量清单计价》，公开发表建筑工程管理类文章多篇。授课利落严谨，理论联系实际，通俗易懂。在考前冲刺培训中，对知识点剖析精准专业，考前技巧独到。&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br><span class="line">// css</span><br><span class="line"><span class="selector-class">.teacher-container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex; // 解决父级高度自适应，子级高度<span class="number">100%</span>但是元素却无法撑满</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">345px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.teacher-desc</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  -webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line">  -webkit-box-orient: vertical;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">16px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: $primary;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">    shape-outside: <span class="built_in">inset</span>(<span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">16px</span>) <span class="number">0</span> <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、文本展开"><a href="#三、文本展开" class="headerlink" title="三、文本展开"></a>三、文本展开</h2><p>展开设置样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.teacher-desc</span> &#123;</span><br><span class="line">-webkit-line-clamp: <span class="number">999</span>; // 设置一个较大的数</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一种情况要处理，展开被挤到下一行，而覆盖展开的块是紧跟文字的，展开没有被完全覆盖住。<br><img src="image09.png" width="540px"><br>这里用<code>box-shadow</code>处理</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.excerpt</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">   <span class="attribute">box-shadow</span>: -<span class="number">2em</span> <span class="number">2em</span> <span class="number">#fff</span>; <span class="comment">/*左下的阴影*/</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这里用红色更容易看效果<br><img src="image10.png" width="540px"></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用light house对m站进行性能分析</title>
      <link href="/2021/05/light-house-performance-analysis/"/>
      <url>/2021/05/light-house-performance-analysis/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>谈到性能优化，我们时常会想到：</p><ul><li>压缩外部资源</li><li>对JavaScript进行分包</li><li>对各种外部资源进行懒加载</li><li>请求链路上的优化（缓存，cdn，http2诸如此类）</li></ul><p>但是说这么多的优化手段，我们到底在优化什么？加载时间是多少才算作快？用什么作为我们优化的参照物呢？ 当我们接收到一个性能优化的任务，用什么去衡量成果？</p><p>今天主要借助 lighthouse 对网站整体进行评估，针对 lighthouse 给出的完善建议，做一些优化。</p><span id="more"></span><h2 id="lighthouse面板"><a href="#lighthouse面板" class="headerlink" title="lighthouse面板"></a>lighthouse面板</h2><p><img src="image01.png" alt="image.png"></p><p><strong>「First Contentful Paint」</strong> 首屏渲染时间，Chrome会取第一个渲染出来的元素作为时间参考。<br><strong>「Time to Interactive</strong> 」页面资源加载成功并能响应用户交互的时间点<br><strong>「Speed Index」</strong> 首屏展现时间<br><strong>「Total Blocking Time</strong>」FCP到TTI之间,主线程被long task(超过50ms)阻塞的时间之和<br><strong>「Largest Contentful Paint」</strong> 页面中最大内容元素渲染的时间点。<br><strong>「Cumulative Layout Shift</strong> 」元素移动所累积的时间点，比如有一个absolute的元素突然从左边移到了右边。</p><h2 id="Core-Web-Vitals"><a href="#Core-Web-Vitals" class="headerlink" title="Core Web Vitals"></a>Core Web Vitals</h2><p>谈到用户体验与性能指标,顺便提下Core Web Vitals. 2020年5月,Google针对网站使用体验推出了一套核心指标标准(Core Web Vitals).由三项指标构成:<br><img src="image02.png" alt="image.png"><br>为什么不是别的指标呢 ? 因为这套标准主要从以下三个维度进行评估:</p><ul><li>[加载情况] : LCP</li><li>[交互性] : FID</li><li>[视觉稳定性] : CLS</li></ul><h2 id="改善建议"><a href="#改善建议" class="headerlink" title="改善建议"></a>改善建议</h2><p>方案就主要以性能指标作为维度,主要分为以下几个点:</p><ul><li>视觉稳定性 (Cumulative Layout Shift)</li><li>加载情况 (Largest Contentful Paint)</li><li>TTI (Time to Interactive)</li><li>TBT (Total Blocking Time)</li><li>FCP (First Contentful Paint)</li></ul><h3 id="1-视觉稳定性-Cumulative-Layout-Shift"><a href="#1-视觉稳定性-Cumulative-Layout-Shift" class="headerlink" title="1. 视觉稳定性 (Cumulative Layout Shift)"></a>1. 视觉稳定性 (Cumulative Layout Shift)</h3><h4 id="1-1-优化未设置尺寸的图片元素"><a href="#1-1-优化未设置尺寸的图片元素" class="headerlink" title="1.1 优化未设置尺寸的图片元素"></a>1.1 优化未设置尺寸的图片元素</h4><blockquote><p>改善建议里提到了一项优先级很高的优化就是为图片元素设置显式的宽度和高度,从而减少布局偏移和改善CLS.</p></blockquote><p><img src="image03.png" alt="image.png"></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="1-2-避免页面布局发生偏移"><a href="#1-2-避免页面布局发生偏移" class="headerlink" title="1.2 避免页面布局发生偏移"></a>1.2 避免页面布局发生偏移</h4><p><img src="image04.png" alt="image.png"></p><h4 id="1-3-避免非合成动画"><a href="#1-3-避免非合成动画" class="headerlink" title="1.3 避免非合成动画"></a>1.3 避免非合成动画</h4><p><img src="image05.png" alt="image.png"></p><blockquote><p>改善建议中提到应避免使用非合成动画，非合成动画会使得页面变得混乱并增加CLS。关于这个优化建议我觉得应该具体场景具体分析，不应该”因噎废食”。毕竟目前能被composited的css属性只有transform &amp; opacity。当然这也在提醒我们平时在做CSS动画时应注意优化 (比如常见的使用transform替代top)。</p></blockquote><p>参考资料：</p><ul><li>​<a href="https://web.dev/non-composited-animations/?utm_source=lighthouse&utm_medium=lr">为什么建议避免非合成动画</a></li><li>​<a href="https://blog.csdn.net/qq_40028324/article/details/102580363">浏览器性能优化</a></li></ul><h3 id="2-加载情况-Largest-Contentful-Paint"><a href="#2-加载情况-Largest-Contentful-Paint" class="headerlink" title="2. 加载情况 (Largest Contentful Paint)"></a>2. 加载情况 (Largest Contentful Paint)</h3><h4 id="2-1-消除渲染堵塞的资源"><a href="#2-1-消除渲染堵塞的资源" class="headerlink" title="2.1 消除渲染堵塞的资源"></a>2.1 消除渲染堵塞的资源</h4><p><img src="image06.png" alt="image.png"><br>第一个是高德地图的js sdk，改成在需要的页面动态添加script标签引入这个js。<br>如果是全局使用的文件，也可以考虑defer进行异步加载。</p><h4 id="2-2-移除未使用的-CSS-JavaScript"><a href="#2-2-移除未使用的-CSS-JavaScript" class="headerlink" title="2.2 移除未使用的 CSS/JavaScript"></a>2.2 移除未使用的 CSS/JavaScript</h4><blockquote><p>考虑一下按需引入和CDN</p></blockquote><p><img src="image07.png" alt="image.png"><br>查看了几个css文件后，都有一段设置间距的公共样式。排查发现，这段样式写在mixin里，几乎被所有组件引用。<br><img src="image08.png" alt="image.png"><br>解决方案： 移至全局样式文件 index.scss</p><h3 id="3-TBT-Total-Blocking-Time-TTI-Time-to-Interactive"><a href="#3-TBT-Total-Blocking-Time-TTI-Time-to-Interactive" class="headerlink" title="3. TBT (Total Blocking Time) / TTI (Time to Interactive)"></a>3. TBT (Total Blocking Time) / TTI (Time to Interactive)</h3><p><img src="image09.png" alt="image.png"></p><ul><li><p>Reduce JavaScript execution time 减少js的执行时间<br>当JavaScript执行时间超过2秒时，Lighthouse将显示警告。执行时间超过3.5秒时，审核将失败<br>建议（这些webpack都有相关的配置）：</p><ul><li>拆分代码</li><li>缩小并压缩代码</li><li>Tree shaking</li><li>使用缓存代码</li></ul></li><li><p>优化构建bundle体积<br>查看基于<strong>webpack-bundle-analyzer</strong>生成的体积分析报告<br><img src="image10.png" alt="image.png"></p></li></ul><h3 id="4-其他"><a href="#4-其他" class="headerlink" title="4. 其他"></a>4. 其他</h3><h4 id="4-1-使用下一代图片编码格式使用图片"><a href="#4-1-使用下一代图片编码格式使用图片" class="headerlink" title="4.1 使用下一代图片编码格式使用图片"></a>4.1 使用下一代图片编码格式使用图片</h4><p>这里指的是webp格式，显然下面的图片没压缩，应该是运营上传的时候没压缩，可以考虑管理平台支持。<br><img src="image11.png" alt="image.png"></p><h4 id="4-2-图片懒加载"><a href="#4-2-图片懒加载" class="headerlink" title="4.2 图片懒加载"></a>4.2 图片懒加载</h4><p><img src="image12.png" alt="image.png"></p><h4 id="4-3-定制合理的缓存策略"><a href="#4-3-定制合理的缓存策略" class="headerlink" title="4.3 定制合理的缓存策略"></a>4.3 定制合理的缓存策略</h4><p>对于不常改变的静态资源比如说css、image等可以进行缓存<br><img src="image13.png" alt="image.png"></p><p>参考文章：<br><a href="https://juejin.cn/post/6911472693405548557">聊一聊前端性能优化</a><br><a href="https://juejin.cn/post/6959333330277892133">我给网站做了一场性能手术</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 性能分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node学习笔记</title>
      <link href="/2021/04/node-study-notes/"/>
      <url>/2021/04/node-study-notes/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>公司官网要做seo，选用了nuxt框架。压测导致系统崩溃，虽然主因在后台接口，但也暴露出了C端的问题。马上做了一些优化，pm2启用多线程，页面缓存，接口缓存。<br>​<br>学习node是非常必要的，本文是结合demo学习记录的笔记，略为简略。</p><span id="more"></span><h1 id="一、http"><a href="#一、http" class="headerlink" title="一、http"></a>一、http</h1><h2 id="http请求概述"><a href="#http请求概述" class="headerlink" title="http请求概述"></a>http请求概述</h2><ul><li>DNS解析（域名解析成IP），建立TCP连接（三次握手），发送http请求</li><li>server接收到http请求，处理，并返回</li><li>客户端接收到返回数据，处理数据（如渲染页面，执行js）</li></ul><p><strong>get请求</strong>，通过querystring来传递数据，如a.html?a=100&amp;b=200<br>浏览器直接访问，就发送get请求</p><p><strong>post请求</strong></p><p>node自带模块 http、querystring</p><h1 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h1><p>使用nodemon检测文件变化，自动重启node<br>使用corss-env设置环境变量，兼容mac linux 和 windows</p><h1 id="三、存储"><a href="#三、存储" class="headerlink" title="三、存储"></a>三、存储</h1><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h2><ul><li>存储在浏览器的一段字符串（最大5kb）</li><li>跨域不共享</li><li>格式如 k1=v1; k2=v2; k3=v3; 因此可以存储结构化数据</li><li>每次发送 http 请求，会将请求域的 cookie 一起发送给 server</li><li>server 可以修改 cookie 并返回给浏览器</li><li>浏览器也可以通过 js 修改 cookie（有限制）</li></ul><h2 id="用session存储数据的问题"><a href="#用session存储数据的问题" class="headerlink" title="用session存储数据的问题"></a>用session存储数据的问题</h2><ul><li>当前代码的 session 就是js变量，放在nodejs进程内存中</li><li>第一，进程内存有限，访问量过大，内存暴增怎么办？</li><li>第二，正式上线运行是多线程，进程之间内存无法共享 （也可能多机器多集群）</li></ul><h2 id="解决方案redis"><a href="#解决方案redis" class="headerlink" title="解决方案redis"></a>解决方案redis</h2><ul><li>web server 最常用的存储数据库，数据存放在内存中</li><li>相比于 mysql，访问速度快（内存和硬盘不是一个数量级的）</li><li>但是成本更高，可存储的数据量更小（内存的硬伤）</li><li>将web server 和 redis 拆分成两个单独的服务</li><li>双方都是独立的，都是可扩展的（例如都扩展成集群）</li><li>（包括 mysql，也是一个单独的服务，也可扩展 ）</li></ul><h2 id="为何session适合redis"><a href="#为何session适合redis" class="headerlink" title="为何session适合redis"></a>为何session适合redis</h2><ul><li>session 访问频繁，对性能要求极高</li><li>session 可不考虑断电丢失数据的问题（内存的硬伤）</li><li>session 数据量不会太大（相比于 mysql 中存储的数据）</li></ul><h2 id="为何网站数据不适合用redis？"><a href="#为何网站数据不适合用redis？" class="headerlink" title="为何网站数据不适合用redis？"></a>为何网站数据不适合用redis？</h2><ul><li>操作频率不是太高（相比于 session 操作）</li><li>断电不能丢失，必须保留</li><li>数据量太大，内存成本太高</li></ul><p>redis-server<br>redis-cli</p><h1 id="四、nginx"><a href="#四、nginx" class="headerlink" title="四、nginx"></a>四、nginx</h1><ul><li>高性能的 web 服务器，开源免费</li><li>一般用于静态服务，负载均衡</li><li>反向代理</li></ul><p><strong>nginx命令</strong></p><ul><li>测试配置文件格式是否正确 nginx -t</li><li>启动 nginx ； 重启 nginx -s reload</li><li>停止 nginx -s stop</li></ul><p>mac</p><blockquote><p>sudo vi /usr/local/etc/nginx/nginx.conf</p></blockquote><h1 id="五、日志"><a href="#五、日志" class="headerlink" title="五、日志"></a>五、日志</h1><ol><li>第一，访问日志 access log（ server 端最重要的日志）</li><li>第二，自定义日志（包括自定义事件，错误记录等）</li></ol><h2 id="IO操作的性能瓶颈"><a href="#IO操作的性能瓶颈" class="headerlink" title="IO操作的性能瓶颈"></a>IO操作的性能瓶颈</h2><ul><li>IO 包括“网络IO”和“文件IO”</li><li>相比于 CPU 计算和内存读写，IO 的突出特点就是 慢</li><li>如何在有限的硬件资源下提高 IO 的操作效率？</li></ul><h2 id="日志拆分"><a href="#日志拆分" class="headerlink" title="日志拆分"></a>日志拆分</h2><p><strong>crontab设置定时任务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">// 编辑， 每日零点执行</span><br><span class="line">// * 0 * * * /Users/wfp/Project/video-tutorial/node-tutorial/code-demo/blog-1/src/utils/copy.sh</span><br><span class="line">crontab -l</span><br></pre></td></tr></table></figure><h2 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h2><ul><li>如针对 access.log 日志，分析 chrome 的占比</li><li>日志是按行存储的，一行就是一条日志</li><li>使用 nodejs 的 readline (基于 stream，效率高)</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>IO性能瓶颈，使用 stream 提高性能</li><li>使用 crontab 拆分日志文件，使用 readline 分析日志内容</li></ul><h1 id="六、安全"><a href="#六、安全" class="headerlink" title="六、安全"></a>六、安全</h1><p>server 端攻击方式非常多，预防手段也非常多。这里就讲几种常见的，能通过 <strong>web server（nodejs</strong>）层面预约的。<br>有些攻击需要<strong>硬件和服务</strong>来支持（需要OP支持），如DDOS</p><ol><li>sql 注入： 窃取数据库内容</li><li>xss攻击：窃取前端的 cookie 内容</li><li>密码加密: 保障用户信息安全(重要)</li></ol><h2 id="sql-注入"><a href="#sql-注入" class="headerlink" title="sql 注入"></a>sql 注入</h2><ul><li>最原始、最简单的攻击，从有了 web2.0 就有了 sql 注入攻击</li><li>攻击方式:  输入一个 sql 片段，最终形成一段攻击代码</li><li>预防措施：使用 mysql 的 escape 函数处理输入内容即可<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sql = <span class="string">`select username, realname from user where username=&#x27;<span class="subst">$&#123;username&#125;</span>&#x27; and password=&#x27;<span class="subst">$&#123;password&#125;</span>&#x27;;`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// name 如果输入 Roya&#x27; --</span></span><br><span class="line"><span class="comment">// 最后生成的sql语句如下，后面的条件就被注释了</span></span><br><span class="line"><span class="comment">// select username, realname from user where username=&#x27;Roya&#x27; --&#x27; and password=&#x27;12346&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 预防 escape</span></span><br><span class="line"> username = <span class="built_in">escape</span>(username)</span><br><span class="line"> password = <span class="built_in">escape</span>(password)</span><br><span class="line"> <span class="keyword">const</span> sql = <span class="string">`select username, realname from user where username=<span class="subst">$&#123;username&#125;</span> and password=<span class="subst">$&#123;password&#125;</span>;`</span></span><br><span class="line"> <span class="comment">// select username, realname from user where username=&#x27;Roya\&#x27; -- &#x27; and password=&#x27;12346&#x27;;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="XSS攻击"><a href="#XSS攻击" class="headerlink" title="XSS攻击"></a>XSS攻击</h2><ul><li>攻击方式：在页面展示内容中掺杂 js 代码，以获取网页信息</li><li>防御方式：转换特殊符号（xss）</li></ul><h2 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h2><ul><li>万一数据库被用户攻破，最不该泄漏的就是用户信息</li><li>用户密码md5加密</li></ul><h1 id="七、server和前端的区别"><a href="#七、server和前端的区别" class="headerlink" title="七、server和前端的区别"></a>七、server和前端的区别</h1><ol><li>服务器稳定性</li><li>内存CPU（优化 扩展）</li><li>日志记录</li><li>安全（包括登陆验证）</li><li>集群和服务拆分</li></ol><h1 id="八、express"><a href="#八、express" class="headerlink" title="八、express"></a>八、express</h1><p>登录 使用express-session和connect-redis<br>日志 使用脚手架推荐的 morgan</p><h1 id="九、线上环境"><a href="#九、线上环境" class="headerlink" title="九、线上环境"></a>九、线上环境</h1><ul><li>服务器稳定性</li><li>充分利用服务器硬件资源，以便提高性能</li><li>线上日志记录</li></ul><h2 id="PM2"><a href="#PM2" class="headerlink" title="PM2"></a>PM2</h2><ul><li>进程守护，系统崩溃<strong>自动重启</strong></li><li>启动<strong>多进程</strong>，充分利用CPU和内存</li><li>自带日志记录功能</li></ul><p>常用命令</p><ul><li>pm2 start … , pm2 list</li><li>pm2 restart <AppName>/<id></li><li>pm2 stop <AppName>/<id>,  pm2 delete <AppName>/<id></li><li>pm2 info <AppName>/<id></li><li>pm2 log <AppName>/<id></li><li>pm2 monit <AppName>/<id></li></ul><p>配置</p><ul><li>新建 PM2 配置文件（包括进程数量，日志文件目录等）</li><li>修改 PM2 启动命令，重启</li><li>访问 server，检查日志文件的内容（日志记录是否生效）</li></ul>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github博客搭建</title>
      <link href="/2021/02/hexo-build-blog/"/>
      <url>/2021/02/hexo-build-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>整个建站流程是简单的，很快就能搞定。后面的主题优化，插件配置需要看文档研究一下。</p><h1 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h1><h2 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1. 创建仓库"></a>1. 创建仓库</h2><p>打开github，创建一个新的仓库。仓库名称设为<strong>「username」.github.io</strong>，其中username是你在GitHub上的用户名。</p><span id="more"></span><h2 id="2-创建本地文件夹"><a href="#2-创建本地文件夹" class="headerlink" title="2. 创建本地文件夹"></a>2. 创建本地文件夹</h2><p>安装前提: </p><blockquote><p>本地安装了 Node.js 和 Git</p></blockquote><p>安装hexo，安装完成后初始化项目。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装hexo</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="comment">// 初始化生成blog项目</span></span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>启动服务，即可在本地预览网站 <a href="http://localhost:4000/">http://localhost:4000</a> 。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 简写：hexo s</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="3-部署到git"><a href="#3-部署到git" class="headerlink" title="3. 部署到git"></a>3. 部署到git</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装部署插件</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改_config.yml配置文件</span></span><br><span class="line"><span class="comment">// repo 设为 git仓库地址</span></span><br><span class="line"><span class="attr">deploy</span>:</span><br><span class="line">type: git</span><br><span class="line">  <span class="attr">repo</span>: [git仓库地址]</span><br><span class="line"><span class="attr">branch</span>: master</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 部署网站到创建的仓库</span></span><br><span class="line"><span class="comment">// 简写：hexo d</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>执行完以上操作后打开浏览器地址了输入 <a href="http://username.github.io/">http://username.github.io</a> 就可以看看到效果啦。</p><h1 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h1><h2 id="添加文章"><a href="#添加文章" class="headerlink" title="添加文章"></a>添加文章</h2><h3 id="1-创建文章"><a href="#1-创建文章" class="headerlink" title="1. 创建文章"></a>1. <a href="https://hexo.io/zh-cn/docs/writing">创建文章</a></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> post <span class="string">&quot;title&quot;</span></span><br></pre></td></tr></table></figure><p>新建的文章在 source/_posts 中，用markdown语法编辑内容就可以。</p><h3 id="2-Front-matter"><a href="#2-Front-matter" class="headerlink" title="2. Front-matter"></a>2. <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a></h3><p>是文件最上方以 — 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>以下是预先定义的参数，可在模板中使用这些参数值并加以利用。<br><img src="front-matter.png" alt="image.png"></p><h2 id="个性化主题"><a href="#个性化主题" class="headerlink" title="个性化主题"></a>个性化主题</h2><h3 id="1-修改主题"><a href="#1-修改主题" class="headerlink" title="1. 修改主题"></a>1. 修改主题</h3><p>hexo默认的主题是_landscape，官网有收录各种主题，可以挑选自己喜欢的。下面演示主题next的安装步骤。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 可以直接下载主题文件夹，粘贴到站点目录的themes下。</span></span><br><span class="line"><span class="comment">// git clone 主题的仓库地址</span></span><br><span class="line"><span class="comment">// 2. 也可以 npm下载主题next</span></span><br><span class="line">npm install hexo-theme-next</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改_config.yml配置文件</span></span><br><span class="line"><span class="attr">theme</span>: next</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预览网站</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h3 id="2-设置头像"><a href="#2-设置头像" class="headerlink" title="2. 设置头像"></a>2. 设置头像</h3><p>编辑主题配置文件 /thems/next/_config.yml，修改字段 avatar， 值设置成头像的链接地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line"># Replace the default image and set the url here.</span><br><span class="line">url: /uploads/avatar.jpeg</span><br><span class="line"># If true, the avatar will be dispalyed in circle.</span><br><span class="line">rounded: false</span><br><span class="line"># If true, the avatar will be rotated with the cursor.</span><br><span class="line">rotated: false</span><br></pre></td></tr></table></figure><p>修改头像为原形，将 rounded: false 改为 rotated: true 即可。<br>​</p><h3 id="3-添加菜单栏的内容"><a href="#3-添加菜单栏的内容" class="headerlink" title="3. 添加菜单栏的内容"></a>3. 添加菜单栏的内容</h3><p>编辑主题配置文件 /thems/next/_config.yml，修改字段 menu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  #about: /about/ || fa fa-user</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar</span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat</span><br></pre></td></tr></table></figure><p>我们在菜单栏新增了标签页和分类页，下面就要创建这两个页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 创建分类页</span><br><span class="line">hexo new page categories</span><br><span class="line">// 创建标签页</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>以分类页为例，编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="4-侧边栏社交链接"><a href="#4-侧边栏社交链接" class="headerlink" title="4. 侧边栏社交链接"></a>4. 侧边栏社交链接</h3><p>编辑主题配置文件，链接放置在 social 字段下，一行一个链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Social links</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/your-user-name || fab fa-github</span><br><span class="line">  E-Mail: https://twitter.com/your-user-name|| fa fa-envelope</span><br><span class="line"></span><br><span class="line"># Social Icons</span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  # 只显示图标</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br></pre></td></tr></table></figure><h3 id="5-设置阅读全文"><a href="#5-设置阅读全文" class="headerlink" title="5. 设置阅读全文"></a>5. 设置阅读全文</h3><p>NexT主题下如果不设置，首页会显示全文。现在只想在首页只显示文章的概述，而不是全文，用一个“阅读全文”的按钮代替。效果如下：<br>方式一： 在文章的合适位置 &lt; !–more–&gt; 手动进行截断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这是段落1</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">这是段落2</span><br></pre></td></tr></table></figure><p>方式二：在文章中的front-matter中添加description，并提供文章摘录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 测试文章</span><br><span class="line">date: 2020-03-11</span><br><span class="line">tags: [test]</span><br><span class="line">description: 这是文章的摘要，只在首页显示，文章详情页不显示</span><br><span class="line">----</span><br></pre></td></tr></table></figure><h3 id="6-站内搜索"><a href="#6-站内搜索" class="headerlink" title="6. 站内搜索"></a>6. 站内搜索</h3><p>安装插件hexo-generator-searchdb</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>修改全局配置文件_config.yml， 添加如下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>修改主题配置文件，搜索local_search，修改enable为true</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><h3 id="7-修改文章内链接文本样式"><a href="#7-修改文章内链接文本样式" class="headerlink" title="7. 修改文章内链接文本样式"></a>7. 修改文章内链接文本样式</h3><p>修改文件themes\next\source\css_common\components\post\post.styl，在末尾添加如下css样式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 指定p标签，是避免阅读全文样式被修改</span><br></pre></td></tr></table></figure><h3 id="8-修改文章底部的那个带-号的标签"><a href="#8-修改文章底部的那个带-号的标签" class="headerlink" title="8. 修改文章底部的那个带#号的标签"></a>8. 修改文章底部的那个带#号的标签</h3><p>编辑主题配置文件，修改字段 tag_icon</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#tag_icon: false</span><br><span class="line">tag_icon: &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公众号h5开发问题记录</title>
      <link href="/2020/07/wechat-official-account-record/"/>
      <url>/2020/07/wechat-official-account-record/</url>
      
        <content type="html"><![CDATA[<h1 id="微信调整字体大小，导致微信公众号内的H5页面样式异常"><a href="#微信调整字体大小，导致微信公众号内的H5页面样式异常" class="headerlink" title="微信调整字体大小，导致微信公众号内的H5页面样式异常"></a>微信调整字体大小，导致微信公众号内的H5页面样式异常</h1><p>解决方案：阻止ios和安卓调整字体大小时候的事件。ios通过添加css属性，安卓通过微信属性去阻止。<br>注：添加后无法通过外部更改字体大小，根据项目需求运用。</p><span id="more"></span><p>ios</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    -webkit-text-size-adjust: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>android</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> WeixinJSBridge == <span class="string">&quot;object&quot;</span> &amp;&amp; <span class="keyword">typeof</span> WeixinJSBridge.invoke == <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">        handleFontSize();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">&quot;WeixinJSBridgeReady&quot;</span>, handleFontSize, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">handleFontSize</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 设置网页字体为默认大小</span></span><br><span class="line">        WeixinJSBridge.invoke(<span class="string">&#x27;setFontSizeCallback&#x27;</span>, &#123; <span class="string">&#x27;fontSize&#x27;</span> : <span class="number">0</span> &#125;);</span><br><span class="line">        <span class="comment">// 重写设置网页字体大小的事件</span></span><br><span class="line">        WeixinJSBridge.on(<span class="string">&#x27;menu:setfont&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            WeixinJSBridge.invoke(<span class="string">&#x27;setFontSizeCallback&#x27;</span>, &#123; <span class="string">&#x27;fontSize&#x27;</span> : <span class="number">0</span> &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><br/><h1 id="安卓微信浏览器-video-标签层级过高"><a href="#安卓微信浏览器-video-标签层级过高" class="headerlink" title="安卓微信浏览器 video 标签层级过高"></a><a href="https://www.cnblogs.com/wisewrong/p/10276947.html">安卓微信浏览器 video 标签层级过高</a></h1><p>播放器在移动端(尤其是在 X5 内核的浏览器中)会有一些异常.表现在会将 video 标签提升为 Native 控件,覆盖掉底下的 HTML 元素.(原生组件优先级肯定要优先于 HTML 元素)<br><br/></p><h1 id="chrome真机调试，inspect打开的调试界面为空白"><a href="#chrome真机调试，inspect打开的调试界面为空白" class="headerlink" title="chrome真机调试，inspect打开的调试界面为空白"></a>chrome真机调试，inspect打开的调试界面为空白</h1><p>解决方式： 第一次加载需要安装一些google的依赖，需要翻墙解决<br><br/></p><h1 id="路由模式"><a href="#路由模式" class="headerlink" title="路由模式"></a>路由模式</h1><ol><li>hash模式， 以前微信内置浏览器打开分享后的页面#后面的链接丢失（WPS内置浏览器打开链接也出现过同样的问题）</li><li>history模式，需要处理微信环境下ios打开链接重定向后链接不变的问题</li></ol>]]></content>
      
      
      <categories>
          
          <category> 问题记录 </category>
          
          <category> 移动端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录 </tag>
            
            <tag> 微信公众号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html2canvas</title>
      <link href="/2020/07/html2canvas/"/>
      <url>/2020/07/html2canvas/</url>
      
        <content type="html"><![CDATA[<blockquote><p>实现html转图片并长按保存</p></blockquote><span id="more"></span><h1 id="在vue中如何使用"><a href="#在vue中如何使用" class="headerlink" title="在vue中如何使用"></a>在vue中如何使用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div ref=&quot;imageWrapper&quot;&gt;</span><br><span class="line">  &lt;button @click=&quot;convertToImage&quot;&gt;生成截图&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import html2canvas from &quot;html2canvas&quot;</span><br><span class="line">export default &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">  convertToImage() &#123;</span><br><span class="line">      // vue中用ref来指定你需要截屏的dom</span><br><span class="line">    html2canvas(this.$refs.imageWrapper).then(canvas =&gt; &#123;</span><br><span class="line">      let dataURL = canvas.toDataURL(&quot;image/png&quot;)</span><br><span class="line">        this.imgUrl = dataURL</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h1 id="可能出现的问题及相应解决方案"><a href="#可能出现的问题及相应解决方案" class="headerlink" title="可能出现的问题及相应解决方案"></a>可能出现的问题及相应解决方案</h1><h2 id="①-背景图片模糊"><a href="#①-背景图片模糊" class="headerlink" title="① 背景图片模糊"></a>① 背景图片模糊</h2><p>使用<code>&lt;img&gt;</code>标签替换背景图片</p><h2 id="②-图片不显示问题"><a href="#②-图片不显示问题" class="headerlink" title="② 图片不显示问题"></a>② 图片不显示问题</h2><p>有时你可能莫名其妙地发现有些图片并没有出现在导出的图片中，这基本上就是因为图片素材出现跨域，也就是说图片所在的域名与你项目所在域名不一致。这个问题的解决方案就是<code>html2canvas</code>使用时多加以下两个配置项就好了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> html2canvas(<span class="built_in">this</span>.$refs.poster, &#123;</span><br><span class="line">  <span class="attr">allowTaint</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">useCORS</span>: <span class="literal">true</span> </span><br><span class="line">&#125;).then(<span class="function"><span class="params">canvas</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="comment">// ……</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="③-生成背景透明的png"><a href="#③-生成背景透明的png" class="headerlink" title="③ 生成背景透明的png"></a>③ 生成背景透明的png</h2><p><code>html2canvas</code>生成的canvas背景颜色默认是白色，如果用到透明的PNG图片作为背景图或者设置了圆角，需要设置背景透明</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> html2canvas(<span class="built_in">this</span>.$refs.poster, &#123;</span><br><span class="line">  <span class="attr">backgroundColor</span>: <span class="string">&quot;transparent&quot;</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">canvas</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="comment">// ……</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="④-在iOS系统部分浏览器中，用br标签进行文字换行时，文本只显示第一行的问题"><a href="#④-在iOS系统部分浏览器中，用br标签进行文字换行时，文本只显示第一行的问题" class="headerlink" title="④ 在iOS系统部分浏览器中，用br标签进行文字换行时，文本只显示第一行的问题"></a>④ 在iOS系统部分浏览器中，用br标签进行文字换行时，文本只显示第一行的问题</h2><p>这种现象并不是必现的，但确实存在这样的问题，这时解决问题的方式也很简单，就是不用<code>&lt;br&gt;</code>标签来换行，而是采用其他块级标签元素对需要进行换行的文字分别包裹即可。</p><h2 id="⑤-某些手机删除线无法显示"><a href="#⑤-某些手机删除线无法显示" class="headerlink" title="⑤ 某些手机删除线无法显示"></a>⑤ 某些手机删除线无法显示</h2><p>之前看到别人出现的情况是删除线位置偏下，我出现的问题是有些机型删除线完全消失了。应该是html2canvas本身对一些css属性兼容问题，可以参考html2canvas官网。<br>解决方法也比较简单，自己实现一个删除线即可。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.price</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1.5px</span> solid <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="⑥多行文本省略号无法显示"><a href="#⑥多行文本省略号无法显示" class="headerlink" title="⑥多行文本省略号无法显示"></a>⑥多行文本省略号无法显示</h2><p>应该是对css属性的兼容问题。因为在移动端，就算是不同屏幕，显示的字数也差不多，所以可以数一下大概几个字，超出就用js截断，然后加上省略号。如果不强求的话就直接<code>overflow:hidden</code>截断就好了。</p><hr><h1 id="清晰度优化"><a href="#清晰度优化" class="headerlink" title="清晰度优化"></a>清晰度优化</h1><h2 id="①使用px单位"><a href="#①使用px单位" class="headerlink" title="①使用px单位"></a>①使用px单位</h2><p>为了给到<code>html2canvas</code>明确的整数计算值，避免因小数舍入而导致的拉伸模糊，建议将布局中使用中使用<code>%</code>、<code>vw</code>、<code>vh</code>或<code>rem</code>等单位的元素样式，统一改为使用<code>px</code>。<br>实际使用中出现了海报背景图底部出现白边的问题，单位从rem改为px能解决问题</p><h2 id="②优先使用-img-标签展示图片"><a href="#②优先使用-img-标签展示图片" class="headerlink" title="②优先使用 img 标签展示图片"></a>②优先使用 img 标签展示图片</h2><p>很多情况下，导出图片模糊是由原视图中的图片是以 css 中 background 的方式显示的。<br>因为 background-size 并不会反馈一个具体的宽高数值，而是通过枚举值如 contain、cover 等代表图片缩放的类型；相对于<code>&lt;img&gt;</code>标签， background 方式最终生成的图片会较为模糊。<br>将 background 改为<code>&lt;img&gt;</code>方式呈现，对于图片清晰度会有一定的改观。对于必须要使用 background 的场景，参见 5.25 节的解决方案。</p><hr><h1 id="重点总结"><a href="#重点总结" class="headerlink" title="重点总结"></a>重点总结</h1><blockquote><p>① 生成图片的HTML尽量使用<code>&lt;img&gt;</code>而不使用背景图<br>② <code>&#123; allowTaint: true, useCORS: true &#125;</code>可解决跨域图片不显示问题<br>③ <code>&#123; backgroundColor: &quot;transparent&quot; &#125;</code>可解决图片不透明问题</p></blockquote><p>参考链接：<br><a href="https://segmentfault.com/a/1190000021275782">高质量前端快照方案：来自页面的「自拍」</a><br><a href="https://www.jianshu.com/p/abd9e9c5ba20">html2canvas.js——HTML转Canvas工具</a></p><hr><h1 id="2020-7-23更新"><a href="#2020-7-23更新" class="headerlink" title="2020.7.23更新"></a>2020.7.23更新</h1><h2 id="线上bug：ios反馈生成海报无效"><a href="#线上bug：ios反馈生成海报无效" class="headerlink" title="线上bug：ios反馈生成海报无效"></a>线上bug：ios反馈生成海报无效</h2><p><strong>问题定位：</strong> <a href="https://developers.weixin.qq.com/community/develop/doc/00006eee95488060bb1ac5bd85b000?highLine=html2canvas">在ios 13.4中，微信浏览器使用html2canvas无任何反馈</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// ios 13.4 微信浏览器</span><br><span class="line">html2canvas(shareContent as HTMLElement, opts).then(canvas =&gt; &#123;</span><br><span class="line">  // 无反馈</span><br><span class="line">&#125;).catch(_ =&gt; &#123;</span><br><span class="line">  // 无反馈</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 在ios 非13.4系统微信浏览器中</span><br><span class="line">html2canvas(shareContent as HTMLElement, opts).then(canvas =&gt; &#123;</span><br><span class="line">  // 有反馈</span><br><span class="line">&#125;).catch(_ =&gt; &#123;</span><br><span class="line">  // 有反馈</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>解决方案：</strong> html2canvas 版本回退到rc.4</p>]]></content>
      
      
      <categories>
          
          <category> h5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html2canvas </tag>
            
            <tag> h5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp打包h5问题记录</title>
      <link href="/2020/03/uniapp-build-h5-record/"/>
      <url>/2020/03/uniapp-build-h5-record/</url>
      
        <content type="html"><![CDATA[<p><strong>uniapp小程序项目打包h5存在以及需要注意的问题</strong></p><span id="more"></span><ol><li><p>如何构建多页面</p></li><li><p>原有项目为了配合小程序生态，比如分包导致项目结构不是很合理 （这个问题可以忽略）</p></li><li><p>不同端显示的样式不一致（如果用小程序的代码迭代出个h5的版本，可能面临比较多的样式、组件兼容性问题）</p></li><li><p>pages.json文件不区分平台，小程序引用的第三方插件cc，打包h5会报错</p></li><li><p><del>uniapp里如果配置多页面，意味着后期加的独立页面，开发人员要会uniapp，有学习成本</del>（实践发现好像不能配置多页面，其他页面需要搭建一个新项目）</p></li><li><p>数据存储，小程序可以存储对象，h5的localstorage需要转成JSON字符串</p></li><li><p>一些处理需要区分平台，框架提供的api可能在不同平台上是undefined。比如页面初始化时更新小程序版本</p></li><li><p>小程序有些页面的数据是从上个页面传递过来的，h5需要调接口查询数据</p></li><li><p>CSS:  非H5端不支持*选择器；元素选择器里没有body，改为了page</p></li><li><p>APP 和小程序的导航栏和 <code>tabbar</code> 均是原生控件，元素区域坐标是不包含原生导航栏和 <code>tabbar</code> 的；而 H5 里导航栏和 <code>tabbar</code> 是 div 模拟实现的，所以元素坐标会包含导航栏和tabbar的高度。当前项目部分页面用到了fixed定位</p></li><li><p>h5需要用插件实现路由守卫</p></li></ol><p>uniapp不支持vue的自定义指令？19年的帖子官方回复不支持</p>]]></content>
      
      
      <categories>
          
          <category> 问题记录 </category>
          
          <category> uniapp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> h5 </tag>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
